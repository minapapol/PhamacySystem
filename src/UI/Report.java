/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author Napapol
 */
public class Report extends javax.swing.JFrame {

    /**
     * Attributes
     */
    
    String report_type = "";
    
    /**
     * Creates new form Report
     */
    public Report() {
        initComponents();
        
        java.sql.Date report_date_ = new java.sql.Date(new Date().getTime());
        report_date.setDate(report_date_);
        
        report_type = "selling";
        
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            ArrayList<String[]> histories = data_table.list_sell_histories(report_date_);
            //"ลำดับ","ชื่อสินค้า" , "จำนวน", "จำนวนเงิน", "ส่วนลด" ,"รับสุทธิ", "หมายเหตุ"
            if (histories.size() > 0) {
                String barcodeTemp = histories.get(0)[1];
                String name = data_table.get_medicine_name(histories.get(0)[1]);
                for(int i = 0; i < histories.size(); i++){
                    String[] data_list = new String[7];
                    if (i != 0 && !barcodeTemp.equals(histories.get(i)[1])) {
                        barcodeTemp = histories.get(i)[1];
                        name = data_table.get_medicine_name(histories.get(i)[1]);
                    }

                    int amount = Integer.parseInt(histories.get(i)[4]);
                    float total = Float.parseFloat(histories.get(i)[5]);
                    String discount = histories.get(i)[6];

                    data_list[0] = histories.get(i)[0] + "";
                    data_list[1] = name + "";
                    data_list[2] = amount + "";
                    String[] temp = discount.split("-");
                    if (temp [1].equals("บาท") && !temp[0].equals("")) {
                        data_list[3] = "" + (total + Float.parseFloat(temp[0]));
                    } else if (temp[1].equals("%") && !temp[0].equals("")) {
                        data_list[3] = "" + ((total/Float.parseFloat(temp[0])) * 100); 
                    } else {
                        data_list[3] = "" + total;
                    }

                    data_list[4] = discount;
                    data_list[5] = "" + total;
                    data_list[6] = "ส่วนลด " + discount;

                    model.addRow(data_list);
                }
            } 
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topic = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JTable();
        selling = new javax.swing.JButton();
        type11 = new javax.swing.JButton();
        type9 = new javax.swing.JButton();
        type7 = new javax.swing.JButton();
        export = new javax.swing.JButton();
        barcode = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        type10 = new javax.swing.JButton();
        buying = new javax.swing.JButton();
        itemSelectedButton = new javax.swing.JButton();
        report_date = new org.jdesktop.swingx.JXDatePicker();
        reportByDate = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topic.setFont(new java.awt.Font("CordiaUPC", 1, 24)); // NOI18N
        topic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topic.setText("รายงานการขาย");

        jButton1.setText("back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "ลำดับ","ชื่อสินค้า" , "จำนวน", "จำนวนเงิน", "ส่วนลด" ,"รับสุทธิ", "หมายเหตุ"
            }
        ));
        jScrollPane1.setViewportView(listTable);

        selling.setText("รายการขาย");
        selling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellingActionPerformed(evt);
            }
        });

        type11.setText("ข.ย. 11");
        type11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type11ActionPerformed(evt);
            }
        });

        type9.setText("ข.ย. 9");
        type9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type9ActionPerformed(evt);
            }
        });

        type7.setText("ข.ย. 7");
        type7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type7ActionPerformed(evt);
            }
        });

        export.setText("Export excel");
        export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportActionPerformed(evt);
            }
        });

        barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        type10.setText("ข.ย. 10");
        type10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type10ActionPerformed(evt);
            }
        });

        buying.setText("รายการซื้อ");
        buying.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyingActionPerformed(evt);
            }
        });

        itemSelectedButton.setText("Select");
        itemSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSelectedButtonActionPerformed(evt);
            }
        });

        report_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                report_dateActionPerformed(evt);
            }
        });

        reportByDate.setText("รายงานตามวันที่");
        reportByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportByDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(export)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemSelectedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(type7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(type9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(type10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(type11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selling)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buying)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(77, 77, 77)
                        .addComponent(reportByDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(report_date, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(topic, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(report_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportByDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selling)
                    .addComponent(type11)
                    .addComponent(type9)
                    .addComponent(type7)
                    .addComponent(type10)
                    .addComponent(buying))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(export)
                    .addComponent(itemSelectedButton))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(topic, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(339, Short.MAX_VALUE)))
        );

        reportByDate.setSelected(true);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        UI newUi = new UI();
        newUi.setLocationRelativeTo(this);
        newUi.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void type7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type7ActionPerformed
        // TODO add your handling code here:
        report_type = "type7";
        
        topic.setText("แบบ ข.ย. 7");
        
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
               "ลำดับ","ชื่อยาอันตราย" , "ชื่อยาควบคุมพิเศษ", "เลขที่ของครั้งที่ผลิต", "วัน เดือน ปี ที่ขาย" ,"จำนวน/ปริมาณ", "ราคา/หน่วย", "ราคารวม"
            }
        ));
        
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            java.sql.Date report_date_ = new java.sql.Date(report_date.getDate().getTime() );
            ArrayList<String[]> histories = data_table.list_sell_type7_histories(report_date_);
            
            for(int i = 0; i < histories.size(); i++){
                Object[] data_list = {
                    i + 1, //order
                    "", // medicine name 
                    "", // medicine name 
                    histories.get(i)[2], // lot no
                    histories.get(i)[3], // selling date
                    histories.get(i)[4], // amount
                    (Float.parseFloat(histories.get(i)[5])/Integer.parseInt(histories.get(i)[4])), // price
                    histories.get(i)[5], // total
                };
                
                ArrayList<String[]> datas = data_table.list_medicine_details(histories.get(i)[1], histories.get(i)[2], "");
                
                switch(datas.get(0)[15]){
                    case "ยาอันตราย":
                        data_list[1] = data_table.get_medicine_name(histories.get(i)[1]);
                        break;
                    case "ยาควบคุมพิเศษ":
                        data_list[2] = data_table.get_medicine_name(histories.get(i)[1]);
                        break;
                }
                
                model.addRow(data_list);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_type7ActionPerformed
    
    private void sellingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellingActionPerformed
        // TODO add your handling code here:
        report_type = "selling";
        
        topic.setText("รายการขาย");
        
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "ลำดับ","ชื่อสินค้า" , "จำนวน", "จำนวนเงิน", "ส่วนลด" ,"รับสุทธิ", "หมายเหตุ"
            }
        ));
        
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            java.sql.Date report_date_ = new java.sql.Date(report_date.getDate().getTime() );
              
            ArrayList<String[]> histories;
            histories = data_table.list_sell_histories(report_date_);
                //"ลำดับ","ชื่อสินค้า" , "จำนวน", "จำนวนเงิน", "ส่วนลด" ,"รับสุทธิ", "หมายเหตุ"
                
            if (histories.size() > 0) {
                String barcodeTemp = histories.get(0)[1];
                String name = data_table.get_medicine_name(histories.get(0)[1]);
                for(int i = 0; i < histories.size(); i++){
                    String[] data_list = new String[7];
                    if (i != 0 && !barcodeTemp.equals(histories.get(i)[1])) {
                        barcodeTemp = histories.get(i)[1];
                        name = data_table.get_medicine_name(histories.get(i)[1]);
                    }

                    int amount = Integer.parseInt(histories.get(i)[4]);
                    float total = Float.parseFloat(histories.get(i)[5]);
                    String discount = histories.get(i)[6];

                    data_list[0] = histories.get(i)[0] + "";
                    data_list[1] = name + "";
                    data_list[2] = amount + "";
                    String[] temp = discount.split("-");
                    if (temp [1].equals("บาท") && !temp[0].equals("")) {
                        data_list[3] = "" + (total + Float.parseFloat(temp[0]));
                    } else if (temp[1].equals("%") && !temp[0].equals("")) {
                        data_list[3] = "" + ((total/Float.parseFloat(temp[0])) * 100); 
                    } else {
                        data_list[3] = "" + total;
                    }

                    data_list[4] = discount;
                    data_list[5] = "" + total;
                    data_list[6] = "ส่วนลด " + discount;

                    model.addRow(data_list);
                } 
            }  
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sellingActionPerformed

    private void type9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type9ActionPerformed
        // TODO add your handling code here:
        report_type = "type9";
        
        topic.setText("แบบ ข.ย. 9");
        
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
               "ลำดับ","วัน เดือน ปี ที่ซื้อ" , "ชื่อผู้ขาย", "ชื่อยา", "เลขที่ของครั้งที่ผลิต" ,"จำนวน/ปริมาณ", "ราคา/หน่วย", "ราคารวม"
            }
        ));
        
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            java.sql.Date report_date_ = new java.sql.Date(report_date.getDate().getTime() );
            ArrayList<String[]> histories = data_table.list_buy_histories(report_date_);                
            
            for(int i = 0; i < histories.size(); i++){
                
                MedicineDetail md = data_table.get_medicine_detail(histories.get(i)[1], histories.get(i)[2]);
                Object[] data_list = {
                    i + 1, //order
                    histories.get(i)[3], // buying date
                    md.getCompanyName(), // company name 
                    data_table.get_medicine_name(histories.get(i)[1]), // medicine name
                    histories.get(i)[2], // lot no
                    histories.get(i)[4] + "/" + md.getMedicineSize(), // amount/size
                    md.pricePerUnit() + "/" + md.getUnit(),   // price/unit
                    histories.get(i)[5], // total
                };
                
                
                model.addRow(data_list);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_type9ActionPerformed

    private void type11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type11ActionPerformed
        // TODO add your handling code here:
        report_type = "type11";
        
        topic.setText("แบบ ข.ย. 11");
        
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
               "ลำดับ", "บาร์โค๊ด", "ชื่อสินค้า", "ครั้งที่ผลิต"
            }
        ));

        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            ArrayList<String[]> medicines = data_table.list_medicine_details("", "", "");
            
            for(int i = 0; i < medicines.size(); i++){
                Object[] data_list = {
                    i + 1, //order
                    medicines.get(i)[1], // บาร์โค๊ด
                    data_table.get_medicine_name(medicines.get(i)[1]),
                    medicines.get(i)[4], // ครั้งที่ผลิต
                };
                
                model.addRow(data_list);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_type11ActionPerformed

    
    private void listSellHistory (String barcode_, String lot_no_) {
        // TODO add your handling code here:
        report_type = "type11";
        
        topic.setText("แบบ ข.ย. 11");
        
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
               "ลำดับ","วัน เดือน ปี ที่ขาย" , "จำนวน/ ปริมาณ", "ผู้ซื้อ", "เลขที่ของครั้งที่ผลิต" 
            }
        ));

        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            ArrayList<String[]> histories = data_table.list_sell_histories_per_item(barcode_, lot_no_);
            
            for(int i = 0; i < histories.size(); i++){
                Object[] data_list = {
                    i + 1, //order
                    histories.get(i)[3], // selling date
                    histories.get(i)[4], // amount/size
                    "",
                    histories.get(i)[2],
                };
                
                model.addRow(data_list);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
            
    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportActionPerformed
        // TODO add your handling code here:
        System.out.println("Excel exporting . . .");
        System.out.println("report type: " + report_type);
        try {
            switch(report_type) {
                case "type7":
                    exportToExcel(listTable,"D:\\reports\\templates\\7_template.xls", "D:\\reports\\7\\1.xls");
                    break;
                case "type9":
                    exportToExcel(listTable,"D:\\reports\\templates\\9_template.xls", "D:\\reports\\9\\1.xls");
                    break;
                case "type10":
                    exportToExcel(listTable,"D:\\reports\\templates\\10_template.xls", "D:\\reports\\10\\1.xls");
                    break;
                case "type11":
                    String medicine_name = "none";
                    try {
                        MySQLAccess medicine_db = new MySQLAccess();
                        medicine_name = medicine_db.get_medicine_name(barcode.getText());
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    if(!medicine_name.equals("none")) {
                        exportToExcel(listTable,"D:\\reports\\templates\\11_template.xls", "D:\\reports\\11\\1.xls");
                    } 
                    break;
                case "selling":                    
                    exportToExcel(listTable,"D:\\reports\\templates\\10_template.xls", "D:\\reports\\selling\\1.xls");
                    break; 
            }
            
        } catch (IOException e) {
            e.getMessage();
        } catch (BiffException | WriteException ex) {
            Logger.getLogger(Reminder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportActionPerformed

    private void barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(data_table.list_lot_report(barcode.getText())));
            
            String lot_no_ = jComboBox1.getSelectedItem().toString();
            
            listSellHistory(barcode.getText(), lot_no_);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_barcodeActionPerformed

    private void type10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type10ActionPerformed
        // TODO add your handling code here:
        report_type = "type10";
        
        topic.setText("แบบ ข.ย. 10");
        
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "ลำดับ","ชื่อสินค้า" , "จำนวน", "จำนวนเงิน", "ส่วนลด" ,"รับสุทธิ", "หมายเหตุ"
            }
        ));
        
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            java.sql.Date report_date_ = new java.sql.Date(report_date.getDate().getTime() );
            ArrayList<String[]> histories = data_table.list_sell_type10_histories(report_date_);
            //"ลำดับ","ชื่อสินค้า" , "จำนวน", "จำนวนเงิน", "ส่วนลด" ,"รับสุทธิ", "หมายเหตุ"
        
            if (histories.size () > 0) {
                String barcodeTemp = histories.get(0)[1];
                String name = data_table.get_medicine_name(histories.get(0)[1]);
                for(int i = 0; i < histories.size(); i++){
                    String[] data_list = new String[7];
                    if (i != 0 && !barcodeTemp.equals(histories.get(i)[1])) {
                        barcodeTemp = histories.get(i)[1];
                        name = data_table.get_medicine_name(histories.get(i)[1]);
                    }

                    int amount = Integer.parseInt(histories.get(i)[4]);
                    float total = Float.parseFloat(histories.get(i)[5]);
                    String discount = histories.get(i)[6];

                    data_list[0] = histories.get(i)[0] + "";
                    data_list[1] = name + "";
                    data_list[2] = amount + "";
                    String[] temp = discount.split("-");
                    if (temp [1].equals("บาท") && !temp[0].equals("")) {
                        data_list[3] = "" + (total + Float.parseFloat(temp[0]));
                    } else if (temp[1].equals("%") && !temp[0].equals("")) {
                        data_list[3] = "" + ((total/Float.parseFloat(temp[0])) * 100); 
                    } else {
                        data_list[3] = "" + total;
                    }

                    data_list[4] = discount;
                    data_list[5] = "" + total;
                    data_list[6] = "ส่วนลด " + discount;

                    model.addRow(data_list);
                } 
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_type10ActionPerformed

    private void buyingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyingActionPerformed
        // TODO add your handling code here:
        report_type = "buying";
        
        topic.setText("รายการซื้อ");
        
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "ลำดับ","ซื้อมาจาก" , "ชื่อสินค้า", "ครั้งที่ผลิต", "วันหมดอายุ" ,"จำนวนรับ", "ราคา/หน่วย", "จำนวนเงิน", "หมายเหตุ"
            }
        ));
        
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);
        
        
        try {
            MySQLAccess data_table = new MySQLAccess();
            java.sql.Date report_date_ = new java.sql.Date(report_date.getDate().getTime() );
            ArrayList<String[]> histories = data_table.list_buy_histories(report_date_);
            //"ลำดับ","ชื่อสินค้า" , "จำนวน", "จำนวนเงิน", "ส่วนลด" ,"รับสุทธิ", "หมายเหตุ"
            
            if (histories.size() > 0) {
                String barcodeTemp = histories.get(0)[1];
                String name = data_table.get_medicine_name(histories.get(0)[1]);

                for(int i = 0; i < histories.size(); i++){
                    String[] data_list = new String[9];
                    if (i != 0 && !barcodeTemp.equals(histories.get(i)[1])) {
                        barcodeTemp = histories.get(i)[1];
                        name = data_table.get_medicine_name(histories.get(i)[1]);
                    }

                    MedicineDetail md = data_table.get_medicine_detail(histories.get(i)[1], histories.get(i)[2]);
                    String company_name = md.getCompanyName();

                    int amount = Integer.parseInt(histories.get(i)[4]);
                    float total = Float.parseFloat(histories.get(i)[5]);

                    data_list[0] = histories.get(i)[0] + ""; //ลำดับ
                    data_list[1] = company_name; //ซื้อมาจาก
                    data_list[2] = name; //ชื่อยา
                    data_list[3] = histories.get(i)[2]; // ครั้งที่
                    data_list[4] = md.getExpiredDateString(); // วันหมดอายุ
                    data_list[5] = amount + ""; // จำนวน
                    data_list[6] = md.pricePerUnit() + ""; // ราคา/หน่วย
                    data_list[7] = total + ""; // จำนวนเงิน
                    model.addRow(data_list); 
                } 
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_buyingActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        model.setNumRows(0);

        String lot_no_ = jComboBox1.getSelectedItem().toString();
            
        listSellHistory(barcode.getText(), lot_no_);

        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void itemSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSelectedButtonActionPerformed
        // TODO add your handling code here:
        if (report_type.equals("type11")) {
            String barcode_ = listTable.getValueAt(listTable.getSelectedRow(), 1).toString();
            
            barcode.setText (barcode_);
            try {
                MySQLAccess data_table = new MySQLAccess();

                jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(data_table.list_lot_report(barcode_)));
                
                jComboBox1.setSelectedItem(listTable.getValueAt(listTable.getSelectedRow(), 3).toString());
                
            } catch (Exception e) {
                e.printStackTrace();
            }
            
            String lot_no_ = listTable.getValueAt(listTable.getSelectedRow(), 3).toString();
            
            listSellHistory(barcode_, lot_no_);
            
        }
    }//GEN-LAST:event_itemSelectedButtonActionPerformed

    private void report_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_report_dateActionPerformed
        // TODO add your handling code here:
        switch (report_type) {
            case "type7":
                type7ActionPerformed (evt);
                break;
            case "type9":
                type9ActionPerformed (evt);
                break;
            case "type10":
                type10ActionPerformed (evt);
                break;
            case "type11":
                type11ActionPerformed (evt);
                break;
            case "selling":
                sellingActionPerformed (evt);
                break;
            case "buying":
                buyingActionPerformed (evt);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_report_dateActionPerformed

    private void reportByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportByDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportByDateActionPerformed

    public void exportToExcel(javax.swing.JTable table, String import_file, String export_file) throws IOException, BiffException, WriteException {
        System.out.println("Write Start");
        
        Workbook existingWorkbook = Workbook.getWorkbook(new File(import_file));
        System.out.println("Importing File . . .");
        WritableWorkbook workbook = Workbook.createWorkbook(new File(export_file),existingWorkbook);
        System.out.println("Create new Sheet");
        WritableSheet sheet = workbook.getSheet("First Sheet");
        
        Label label;
        float total = 0f, discount = 0f;
        int i;
        switch(report_type) {
            case "type7":
                exportToExcel(listTable,"D:\\reports\\templates\\7_template.xls", "D:\\reports\\7\\1.xls");
                break;
            case "type9":
                exportToExcel(listTable,"D:\\reports\\templates\\9_template.xls", "D:\\reports\\9\\1.xls");
                break;
            case "type10":
                exportToExcel(listTable,"D:\\reports\\templates\\10_template.xls", "D:\\reports\\10\\1.xls");
                break;
            case "type11":
                String medicine_name = "none";
                try {
                    MySQLAccess medicine_db = new MySQLAccess();
                    medicine_name = medicine_db.get_medicine_name(barcode.getText());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                if(!medicine_name.equals("none")) {
                    exportToExcel(listTable,"D:\\reports\\templates\\11_template.xls", "D:\\reports\\11\\1.xls");
                } 
                break;
            case "selling":                    
                java.util.Date dateTime = new java.util.Date ();
                
                label = new Label(0, 1, dateTime.getDate()+"/"+(dateTime.getMonth()+1)+"/"+(dateTime.getYear() + 1900)); 
                sheet.addCell(label);
                
                for (i = 0; i < table.getRowCount(); i++ ) {
                    // order
                    addCell(sheet, Border.ALL, BorderLineStyle.THIN, 0, (i + 3), (i + 1) + "");
                    // name
                    addCell(sheet, Border.ALL, BorderLineStyle.THIN, 1, i + 3, (String) table.getValueAt(i, 1));
                    // amount
                    addCell(sheet, Border.ALL, BorderLineStyle.THIN, 2, i + 3, (String) table.getValueAt(i, 2));
                    // total before discount
                    addCell(sheet, Border.ALL, BorderLineStyle.THIN, 3, i + 3, (String) table.getValueAt(i, 3));
                    total = Float.parseFloat ((String) table.getValueAt(i, 3) );
                    // real total
                    addCell(sheet, Border.ALL, BorderLineStyle.THIN, 5, i + 3, (String) table.getValueAt(i, 5));
                    if ( !((String) table.getValueAt(i, 4)).split ("-")[0].equals("0.0") ) { 
                        // discount
                        addCell(sheet, Border.ALL, BorderLineStyle.THIN, 4, i + 3, (String) table.getValueAt(i, 4));
                        discount = Float.parseFloat ((String) table.getValueAt(i, 4) );
                        // ps. 
                        addCell(sheet, Border.ALL, BorderLineStyle.THIN, 6, i + 3, (String) table.getValueAt(i, 6));
                    } else {
                        addCell(sheet, Border.ALL, BorderLineStyle.THIN, 4, i + 3, "");
                        addCell(sheet, Border.ALL, BorderLineStyle.THIN, 6, i + 3, "");
                    }
                }
                
                //summary 3, 4, 5
                addCell(sheet, Border.ALL, BorderLineStyle.THIN, 3, i + 3, total + "");
                addCell(sheet, Border.ALL, BorderLineStyle.THIN, 4, i + 3, discount + "");
                addCell(sheet, Border.ALL, BorderLineStyle.THIN, 5, i + 3, (total - discount) + "");
                break; 
        }
                
        //table.getValueAt(0, 0);
        System.out.println(report_type);
        workbook.write(); 
        workbook.close();
        existingWorkbook.close();
        System.out.println("Successfully write");
      
    }
    
    private static void addCell(WritableSheet sheet, 
        Border border, 
        BorderLineStyle borderLineStyle, 
        int col, int row, String desc) throws WriteException {
    
        WritableCellFormat cellFormat = new WritableCellFormat();
        cellFormat.setBorder(border, borderLineStyle);
        Label label = new Label(col, row, desc, cellFormat);
        sheet.addCell(label);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcode;
    private javax.swing.JButton buying;
    private javax.swing.JButton export;
    private javax.swing.JButton itemSelectedButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listTable;
    private javax.swing.JCheckBox reportByDate;
    private org.jdesktop.swingx.JXDatePicker report_date;
    private javax.swing.JButton selling;
    private javax.swing.JLabel topic;
    private javax.swing.JButton type10;
    private javax.swing.JButton type11;
    private javax.swing.JButton type7;
    private javax.swing.JButton type9;
    // End of variables declaration//GEN-END:variables
}
